const fs = require('fs').promises;
const path = require('path');

async function viewUsers() {
    try {
        const profileFile = path.join(__dirname, 'data_profile', 'users.json');
        
        console.log('üìÅ –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:', profileFile);
        
        const data = await fs.readFile(profileFile, 'utf8');
        const profiles = JSON.parse(data);
        
        console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        console.log('================');
        console.log(`–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${profiles.totalUsers}`);
        console.log(`–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${profiles.lastUpdate}`);
        
        if (profiles.metadata) {
            console.log(`–í–µ—Ä—Å–∏—è: ${profiles.metadata.version}`);
            console.log(`–û–ø–∏—Å–∞–Ω–∏–µ: ${profiles.metadata.description}`);
        }
        
        if (profiles.users.length > 0) {
            console.log('\nüë• –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:');
            console.log('=====================================');
            
            profiles.users.forEach((user, index) => {
                console.log(`\n${index + 1}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: ${user.id}`);
                console.log(`   Email: ${user.email}`);
                console.log(`   –°—Ç–∞—Ç—É—Å: ${user.status}`);
                console.log(`   Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: ${user.emailVerified ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
                console.log(`   –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${user.registrationDate}`);
                console.log(`   –ü–∞—Ä–æ–ª—å: ${user.password}`);
            });
        } else {
            console.log('\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        }
        
    } catch (error) {
        if (error.code === 'ENOENT') {
            console.log('‚ùå –§–∞–π–ª —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
            console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Å–∞–π—Ç');
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', error.message);
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä
viewUsers(); 